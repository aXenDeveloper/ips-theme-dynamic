<ips:template parameters="$nodes, $results=FALSE, $permCheck=NULL, $subnodes=TRUE, $togglePerm=NULL, $toggleIds=array(), $disabledCallback=NULL, $autoPopulate=FALSE, $children=NULL, $nodeClass=NULL, $where=NULL, $disabledArray=array(), $noParentNodesTitle=NULL, $noParentNodes=array(), $clubs=NULL, $togglePermPBR=TRUE, $toggleIdsOff=array()" />
{{if empty( $nodes )}}
	<p class='ipsPad_half ipsType_reset ipsType_light'>{lang="no_results"}</p>
{{else}}
	<ul class='ipsList_reset'>
		{{foreach $nodes as $node}}
			{{if $clubs === NULL or ( $clubs === TRUE and $node->club() ) or ( $clubs === FALSE and !$node->club() )}}
				<li>
					{{if ( $permCheck === NULL or $node->can( $permCheck ) ) and ( $disabledCallback === NULL or $disabledCallback( $node ) ) and !\in_array( $node->_id, $disabledArray )}}
						<div data-action="nodeSelect" class='ipsSelectTree_item {{if $node->hasChildren( 'view', NULL, $subnodes, $where )}}ipsSelectTree_withChildren{{endif}} {{if $autoPopulate AND isset( $children[ $node->_id ] )}}ipsSelectTree_itemOpen{{endif}}' data-id="{$node->_id}{{if $nodeClass and !( $node instanceof $nodeClass )}}.s{{endif}}" data-breadcrumb='{expression="json_encode( array_values( array_map( function( $val ){ return isset( $val::$titleLangPrefix ) ? \IPS\Member::loggedIn()->language()->addToStack( $val::$titleLangPrefix . $val->_id, FALSE, array( 'json' => TRUE, 'escape' => TRUE, 'striptags' => TRUE ) ) : ( $val->_title ? $val->_title : $val->_title ); }, iterator_to_array( $node->parents() ) ) ) )"}' {{if $togglePerm and $node->can( $togglePerm, NULL, $togglePermPBR )}}data-control="toggle" data-toggles="{expression="implode( ',', $toggleIds )"}"{{elseif !$togglePerm and isset( $toggleIds[ $node->_id ] )}}data-control="toggle" data-toggles="{expression="implode( ',', $toggleIds[ $node->_id ] )"}"{{elseif \count( $toggleIdsOff )}}data-toggles="{expression="implode( ',', $toggleIdsOff )"}"{{endif}} {{if $autoPopulate AND isset( $children[ $node->_id ] )}}data-childrenloaded="true"{{endif}}>
							{{if $node->hasChildren( 'view', NULL, $subnodes, $where )}}
								<a href='#' data-action="getChildren" class='ipsSelectTree_toggle'></a>
							{{endif}}
							<span data-role="nodeTitle">
								{{if $clubs === TRUE}}
									{lang="club_container_title" sprintf="$node->club()->name, $node->_title"}
								{{else}}
									{$node->_title}
								{{endif}}
							</span>
						</div>
						{{if $autoPopulate AND isset( $children[ $node->_id ] ) and \get_class( $node ) == ltrim( $nodeClass, '\\' )}}
							<div data-role="childWrapper">
								{template="nodeCascade" app="core" group="forms" location="global" params="$children[ $node->_id ], FALSE, $permCheck, $subnodes, $togglePerm, $toggleIds, $disabledCallback, FALSE, $children, $nodeClass, $where, $disabledArray, NULL, array(), NULL, $togglePermPBR, $toggleIdsOff"}
							</div>
						{{endif}}
					{{else}}
						{{if $disabledCallback === NULL or $disabledCallback( $node ) !== NULL}}
							<div class='ipsSelectTree_item ipsSelectTree_itemDisabled {{if $node->hasChildren( 'view', NULL, $subnodes, $where )}}ipsSelectTree_withChildren{{endif}} {{if $autoPopulate AND isset( $children[ $node->_id ] )}}ipsSelectTree_itemOpen{{endif}}' data-id="{$node->_id}" data-breadcrumb='{expression="json_encode( array_values( array_map( function( $val ){ return isset( $val::$titleLangPrefix ) ? \IPS\Member::loggedIn()->language()->addToStack( $val::$titleLangPrefix . $val->_id, FALSE, array( 'json' => TRUE, 'escape' => TRUE, 'striptags' => TRUE ) ) : ( $val->_title ? $val->_title : $val->_title ); }, iterator_to_array( $node->parents() ) ) ) )"}' {{if $autoPopulate AND isset( $children[ $node->_id ] )}}data-childrenloaded="true"{{endif}}>
								{{if $node->hasChildren( 'view', NULL, $subnodes, $where )}}
									<a href='#' data-action="getChildren" class='ipsSelectTree_toggle'></a>
								{{endif}}
								<span data-role="nodeTitle">
									{{if $clubs === TRUE}}
										{lang="club_container_title" sprintf="$node->club()->name, $node->_title"}
									{{else}}
										{$node->_title}
									{{endif}}
								</span>
							</div>
							{{if $autoPopulate AND isset( $children[ $node->_id ] )}}
								<div data-role="childWrapper">
									{template="nodeCascade" app="core" group="forms" location="global" params="$children[ $node->_id ], FALSE, $permCheck, $subnodes, $togglePerm, $toggleIds, $disabledCallback, FALSE, $children, $nodeClass, $where, $disabledArray, NULL, array(), NULL, $togglePermPBR, $toggleIdsOff"}
								</div>
							{{endif}}
						{{endif}}
					{{endif}}
				</li>
			{{endif}}
		{{endforeach}}
		{{if $noParentNodesTitle and \count( $noParentNodes )}}
			<li>
				<div class='ipsSelectTree_item ipsSelectTree_itemDisabled ipsSelectTree_withChildren {{if $autoPopulate}}ipsSelectTree_itemOpen{{endif}}' data-id="0" data-breadcrumb='{expression="json_encode( array() )"}' {{if $autoPopulate}}data-childrenloaded="true"{{endif}}>
					<a href='#' data-action="getChildren" class='ipsSelectTree_toggle'></a>
					<span data-role="nodeTitle">{lang="$noParentNodesTitle"}</span>
				</div>
				{{if $autoPopulate}}
					<div data-role="childWrapper">
						{template="nodeCascade" app="core" group="forms" location="global" params="$noParentNodes, FALSE, $permCheck, $subnodes, $togglePerm, $toggleIds, $disabledCallback, $autoPopulate, $children, $nodeClass, $where, $disabledArray, NULL, array(), NULL, $togglePermPBR, $toggleIdsOff"}
					</div>
				{{endif}}
			</li>
		{{endif}}
	</ul>
{{endif}}